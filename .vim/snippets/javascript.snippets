snippet ae
	${1:document}.addEventListener('${2:event}', () => {
	    ${3:// body}
	})

snippet d
	const ${1:name} = document.querySelector('.${2:selector}')

snippet err
	console.error(${1:body})

snippet ex
	export default function ${1:functionName} (${2:args}) {
	    ${3:code}
	}

snippet f
	function ${1:functionName} (${2:args}) {
	    ${3:code}
	}

snippet for
	for (let i = 0, max = ${1:arr}.length; i < max; i++) {
	    ${2:// body}
	}

snippet fe
	${1:arr}.forEach(i => {
	    ${2:// body}
	})

snippet fi
	for (${1:prop} in ${2:obj}) {
	    if (${2:obj}.hasOwnProperty(${1:prop})) {
	        ${3:// body}
	    }
	}

snippet gi
	${1:document}.getElementById('${2:id}')

snippet if
	if (${1:condition}) {
	    ${2:// body}
	}

snippet ifel
	if (${1:condition}) {
	    ${2:// body}
	} else {
	    ${3:// body}
	}

snippet im
	import ${1:variable} from '${2:package}'

snippet jest
	test('${1:description}', () => {
	    expect(${2:functionName}(${3:recived})).toEqual(${4:expected})
	})

snippet jp
	JSON.parse(${1:obj})

snippet js
	JSON.stringify(${1:obj})

snippet log
	console.log(${1})

snippet map
	${1:arr}.map(i => {
	    ${2:code}
	})

snippet r
	return ${1:code}

snippet rc
	import React, { Component } from 'react'

	export default class ${1:ComponentName} extends Component {
	    render () {
	        return (
	            <${2:div}>
	                <${3:code}>
	            </$2>
	        )
	    }
	}

snippet req
	const ${1:variable} = require('${2:package}')

snippet si
	setInterval(() => {
	    ${1:// body}
	}, ${2:delay});

snippet st
	setTimeout(() => {
	    ${1:// body}
	}, ${2:delay});

snippet try
	try {
	    ${1:// body}
	} catch (error) {
	    console.log(error)
	}

snippet us
	'use strict'
